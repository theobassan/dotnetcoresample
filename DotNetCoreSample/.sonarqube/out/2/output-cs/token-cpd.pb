§
r/Projetos/theobassan/dotnetcoresample/DotNetCoreSample/DotNetCoreSample.MockData/Implementations/UserRepository.cs
	namespace 	
DotNetCoreSample
 
. 
MockData #
.# $
Implementations$ 3
{ 
public		 

class		 
UserRepository		 
:		  !
IUserRepository		" 1
{

 
public 
void 
Dispose 
( 
) 
{ 
}  !
public 
Task 
< 
List 
< 
User 
> 
> 
GetAllAsync  +
(+ ,
CancellationToken, =
ct> @
=A B
defaultC J
)J K
{ 	
var 
user 
= 
new 
User 
{ 
Id 
= 
$num 
, 
Name 
= 
$str 
, 
Email 
= 
$str '
} 
; 
return 
user 
. 

AsListTask "
(" #
)# $
;$ %
} 	
public 
Task 
< 
User 
> 
GetByIdAsync &
(& '
long' +
id, .
,. /
CancellationToken0 A
ctB D
=E F
defaultG N
)N O
{ 	
var 
user 
= 
new 
User 
{ 
Id 
= 
$num 
, 
Name 
= 
$str 
, 
Email 
= 
$str '
}   
;   
return"" 
user"" 
."" 
AsTask"" 
("" 
)""  
;""  !
}## 	
public%% 
Task%% 
<%% 
User%% 
>%% 
AddAsync%% "
(%%" #
User%%# '
t%%( )
,%%) *
CancellationToken%%+ <
ct%%= ?
=%%@ A
default%%B I
)%%I J
{&& 	
return'' 
t'' 
.'' 
AsTask'' 
('' 
)'' 
;'' 
}(( 	
public** 
Task** 
<** 
bool** 
>** 
UpdateAsync** %
(**% &
User**& *
album**+ 0
,**0 1
CancellationToken**2 C
ct**D F
=**G H
default**I P
)**P Q
=>**R T
Task**U Y
.**Y Z

FromResult**Z d
(**d e
true**e i
)**i j
;**j k
public,, 
Task,, 
<,, 
bool,, 
>,, 
DeleteAsync,, %
(,,% &
long,,& *
id,,+ -
,,,- .
CancellationToken,,/ @
ct,,A C
=,,D E
default,,F M
),,M N
=>,,O Q
Task,,R V
.,,V W

FromResult,,W a
(,,a b
true,,b f
),,f g
;,,g h
}-- 
}.. á	
d/Projetos/theobassan/dotnetcoresample/DotNetCoreSample/DotNetCoreSample.MockData/ObjectExtensions.cs
	namespace 	
DotNetCoreSample
 
. 
MockData #
{ 
public 

static 
class 
ObjectExtensions (
{ 
public 
static 
Task 
< 
List 
<  
T  !
>! "
>" #

AsListTask$ .
<. /
T/ 0
>0 1
(1 2
this2 6
T7 8
value9 >
)> ?
=>@ B
newC F
ListG K
<K L
TL M
>M N
{O P
valueQ V
}W X
.X Y
AsTaskY _
(_ `
)` a
;a b
public

 
static

 
Task

 
<

 
T

 
>

 
AsTask

 $
<

$ %
T

% &
>

& '
(

' (
this

( ,
T

- .
value

/ 4
)

4 5
=>

6 8
Task

9 =
.

= >

FromResult

> H
(

H I
value

I N
)

N O
;

O P
} 
} 